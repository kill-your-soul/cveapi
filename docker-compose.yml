version: '3.8'
services:

  db:
    image: postgres
    restart: always
    networks:
      - default
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - "5432:5432"

  core:
    networks:
      - default
    depends_on:
      - db
    restart: always
    build:
      context: ./core
    ports:
      - "80:80"
    volumes:
      - ./core:/app/core
      - ./.env:/app/.env:ro

  # updater:
  #   depends_on:
  #     - core
  #     - db
  #   networks:
  #     - default
  #   build:
  #     context: ./updater
  #   volumes:
  #     - ./updater:/updater
  redis:
    image: redis:7
    restart: always
    networks:
      - default
  
  celery_worker:
    networks:
      - default
    depends_on:
      - core
      - db
      - redis
    build:
      context: ./updater
    volumes:
      - ./updater:/updater
    command: celery -A update.celery worker --loglevel=info

  celery-beat:
    build:
      context: ./updater
    depends_on:
      - redis
      - celery_worker
    networks:
      - default
    command: celery -A update.celery beat --loglevel=info
    volumes:
      - ./updater:/updater  # унаследуйте настройки updater
  # flower:
  #   build:
  #     context: ./updater
  #   depends_on:
  #     - redis
  #     - celery-beat  # flower зависит от расписания beat
  #     - celery_worker
  #   networks:
  #     - default
  #   command: celery flower --port=5555
  #   ports:
  #     - "5555:5555"
  #   volumes:
  #     - ./updater:/app/updater

    # command: celery -A update worker --loglevel=info; celery -A update beat --loglevel=info; celery -A update flower --port 5555 


volumes:
  db_data:

networks:
  default:
