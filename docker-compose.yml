version: '3.8'
services:

  db:
    image: postgres
    restart: always
    networks:
      - default
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - "5432:5432"

  core:
    env_file:
      - .env
    networks:
      - default
    depends_on:
      - db
    restart: always
    build:
      context: ./core
    ports:
      - "80:80"
    volumes:
      - ./core:/app/
      - ./.env:/app/.env:ro
  init:
    env_file:
      - .env
    networks:
      - default
    depends_on:
      - core
      - db
    build: 
      context: ./updater
    volumes:
      - ./updater:/app/updater
    command: python -u main.py
  redis:
    image: redis:7
    restart: always
    networks:
      - default
  
  celery-worker:
    networks:
      - default
    depends_on:
      - core
      - db
      - redis
    build:
      context: ./updater
    volumes:
      - ./updater:/app/updater
    command: celery -A update.celery worker --loglevel=info

  celery-beat:
    build:
      context: ./updater
    depends_on:
      - redis
      - celery-worker
    networks:
      - default
    command: celery -A update.celery beat --loglevel=info
    volumes:
      - ./updater:/updater  # унаследуйте настройки updater

volumes:
  db_data:

networks:
  default:
